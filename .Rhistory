# offers       = sum(offered),
# acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments)) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, semester, country_of_submission, college) %>%
summarise(
# applications = sum(applied),
# offers       = sum(offered),
# acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(label = enrolments) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, semester, country_of_submission, college) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments)) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, semester, citizenship, college) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments)) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, college) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments)) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, college) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, college) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
facet_wrap(~ college, ncol = 2, scales = "free_y") +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, college) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& substr(program_code, 1, 2) %in% "FS"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, program_descr) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
facet_wrap(~ college, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& substr(program_code, 1, 2) %in% "FS"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, program_descr) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
facet_wrap(~ program_descr, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& substr(program_code, 1, 2) %in% "FS"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship, program_descr) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
facet_wrap(~ program_descr, ncol = 2) +
theme_tq() +
labs(
title = "INTON Enrolments: 2016-19",
subtitle = "Where Country of Citizenship is China",
x = "",
y = "Number of Enrolments"
)
inton_tableau %>%
filter(
citizenship == "China (excludes SARs and Taiwan)"
& ((reporting_week == 34 & semester == 1) | (reporting_week == 56 & semester == 2))) %>%
mutate(intake_year = as.character(intake_year)) %>%
group_by(intake_year, citizenship) %>%
summarise(
applications = sum(applied),
offers       = sum(offered),
acceptances  = sum(accepted),
enrolments   = sum(enrolled_net)
) %>%
ungroup() %>%
ggplot(aes(intake_year, enrolments)) +
geom_bar(stat = "identity", fill = "#00AAFF") +
geom_text(aes(label = enrolments), vjust = 0.1) +
theme_tq()
library(swirl)
swirl()
swirl::install_course("Getting_and_cleaning_Data")
swirl::install_course(Getting_and_cleaning_Data)
swirl::install_course("Getting_and_cleaning_Data")
swirl::install_course("Getting_and_Cleaning_Data")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
parse_date_time(25081985)
dmy(25081985)
ymd("192012")
ymd("1920-01-2")
ymd("1920/01/2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- update(depart, hour = 15, minutes = 50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(depart, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
?download.fil
?download.file
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = file_url, destfile = "Downloads/housing_idaho.csv", method = "curl")
housing_idaho <- read.csv("Downloads/housing_idaho.csv")
download.file(url = file_url, destfile = "Downloads/housing_idaho.csv", method = "curl")
download.file(url = file_url, destfile = "Downloads/housing_idaho.csv")
download.file(url = file_url, destfile = "../Downloads/housing_idaho.csv")
housing_idaho <- read.csv("../Downloads/housing_idaho.csv")
names(housing_idaho)
strsplit(names(housing_idaho), split = "wgtp")[123]
#
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url = file_url, destfile = "../Downloads/gdp_190.csv")
gdp_190 <- read.csv("../Downloads/gdp_190.csv")
names(gdp_190)
str(gdp_190)
View(gdp_190)
gdp_190 <- read.csv("../Downloads/gdp_190.csv", skip = 4, header = FALSE)
View(gdp_190)
gdp_190 <- read.csv("../Downloads/gdp_190.csv", skip = 5, header = FALSE)
View(gdp_190)
library(tidyverse)
gdp_190_2 <- gdp_190 %>%
mutate(V5 = gsub(",", "", V5))
View(gdp_190_2)
mean(gdp_190_2$V5)
mean(gdp_190_2$V5, na.rm = TRUE)
gdp_190_2 <- gdp_190 %>%
mutate(V5 = gsub(",", "", V5) %>% as.numeric())
mean(gdp_190_2$V5, na.rm = TRUE)
gdp_190 %>% pull(V5)
gdp_190 <- read.csv("../Downloads/gdp_190.csv", skip = 5, header = FALSE, stringsAsFactors = FALSE)
gdp_190 %>% pull(V5)
gdp_190 %>% pull(V5) %>% str_replace_all(",", "") %>% str_trim()
gdp_190 %>% pull(V5) %>% str_replace_all(",|\.", "") %>% str_trim()
gdp_190 %>% pull(V5) %>% str_replace_all(",|\\.", "") %>% str_trim()
gdp_190 %>% pull(V5) %>% str_replace_all(",|\\.", "") %>% str_trim() %>% as.numeric()
gdp_190 %>% pull(V5) %>% str_replace_all(",|\\.", "") %>% str_trim() %>% as.numeric() %>% mean()
gdp_190 %>% pull(V5) %>% str_replace_all(",|\\.", "") %>% str_trim() %>% as.numeric() %>% mean(na.rm = TRUE)
View(gdp_190)
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url = file_url, destfile = "../Downloads/gdp.csv")
gdp <- read.csv("../Downloads/gdp.csv", stringsAsFactors = FALSE)
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url = file_url, destfile = "../Downloads/fedstats.csv")
fedstats <- read.csv("../Downloads/fedstats.csv", stringsAsFactors = FALSE)
glimpse(gdp)
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url = file_url, destfile = "../Downloads/gdp.csv")
gdp <- read.csv("../Downloads/gdp.csv", skip = 5, header = FALSE, stringsAsFactors = FALSE)
glimpse(gdp)
glimpse(fedstats)
df <- gdp %>%
left_join(fedstats, by = c("V1" = "CountryCode"))
View(df)
df <- gdp %>%
left_join(fedstats, by = c("V1" = "CountryCode")) %>%
mutate(fy_end = str_extract(Special.Notes, "Fiscal year end: .*;"))
df <- gdp %>%
left_join(fedstats, by = c("V1" = "CountryCode")) %>%
mutate(fy_end = str_extract(Special.Notes, "Fiscal year end: .*;") %>% str_replace("Fiscal year end: |;", ""))
df <- gdp %>%
left_join(fedstats, by = c("V1" = "CountryCode")) %>%
mutate(fy_end = str_extract(Special.Notes, "Fiscal year end: .*;") %>% str_replace_all("Fiscal year end: |;", ""))
df %>%
filter(str_detect(fy_end, "[Jj]une"))
df %>%
filter(str_detect(fy_end, "[Jj]une")) %>%
nrow()
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
glimpse(sampleTimes)
names(sampleTimes)
sampleTimes %>% enframe()
sampleTimes %>%
enframe() %>%
mutate(
year = year(value),
wday(value, label = TRUE))
df <- sampleTimes %>%
enframe() %>%
mutate(
year = year(value),
wday(value, label = TRUE))
df %>%
filter(year == 2012)
df %>%
filter(year == 2012) %>%
nrow()
df <- sampleTimes %>%
enframe() %>%
mutate(
year = year(value),
day = wday(value, label = TRUE))
df %>%
filter(year == 2012 & day = "Mon") %>%
nrow()
df <- sampleTimes %>%
enframe() %>%
mutate(
year = year(value),
day = wday(value, label = TRUE)
)
df %>%
filter(year == 2012) %>%
nrow()
df %>%
filter(year == 2012 & day = "Mon") %>%
nrow()
df %>%
filter(year == 2012 & day == "Mon") %>%
nrow()
## Getting and Cleaning Data Course Project
# Libraries ----
library(tidyverse)
# Download data ----
setwd("C:/Users/Ryan/Getting-and-Cleaning-Data-Course-Project")
file_name <- "UCI HAR Dataset.zip"
if (!file.exists(file_name)) {
file_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(file_URL, file_name, method = "curl")
}
if (!file.exists("UCI HAR Dataset")) {
unzip(file_name)
}
# Import data ----
# Training data
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
y_train <- read.table("UCI HAR Dataset/train/Y_train.txt", header = FALSE)
# Test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
y_test <- read.table("UCI HAR Dataset/test/Y_test.txt", header = FALSE)
# Labels
feature_labels <- read.table("UCI HAR Dataset/features.txt", header = FALSE)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)
# Merge data ----
# Subject
subject <- rbind(subject_train, subject_test)
colnames(subject) <- "Subject"
# Activity
activity <- rbind(y_train, y_test)
colnames(activity) <- "Activity"
# Features
features <- rbind(x_train, x_test)
colnames(features) <- feature_labels$V2
# Combine Subject, Activity, and Features
data <- cbind(subject, activity, features)
# Extract Mean & STD measures ----
required_cols <- grep(".*Mean.*|.*Std.*", colnames(data), ignore.case = TRUE)
extracted_data <- data[,c(1:2, required_cols)]
# Descriptive Activity names ----
extracted_data <- extracted_data %>%
left_join(activity_labels, by = c("Activity" = "V1")) %>%
rename(ActivityName = V2) %>%
select(Subject, Activity, ActivityName, everything(), -Activity)
# Clean variable names ----
colnames(extracted_data) <- gsub("Acc", "Accelerometer", colnames(extracted_data))
colnames(extracted_data) <- gsub("Gyro", "Gyroscope", colnames(extracted_data))
colnames(extracted_data) <- gsub("BodyBody", "Body", colnames(extracted_data))
colnames(extracted_data) <- gsub("Mag", "Magnitude", colnames(extracted_data))
colnames(extracted_data) <- gsub("^t", "Time", colnames(extracted_data))
colnames(extracted_data) <- gsub("^f", "Frequency", colnames(extracted_data))
colnames(extracted_data) <- gsub("tBody", "TimeBody", colnames(extracted_data))
colnames(extracted_data) <- gsub("-mean()", "Mean", colnames(extracted_data), ignore.case = TRUE)
colnames(extracted_data) <- gsub("-std()", "STD", colnames(extracted_data), ignore.case = TRUE)
colnames(extracted_data) <- gsub("-freq()", "Frequency", colnames(extracted_data), ignore.case = TRUE)
colnames(extracted_data) <- gsub("angle", "Angle", colnames(extracted_data))
colnames(extracted_data) <- gsub("gravity", "Gravity", colnames(extracted_data))
# Subset with averages ----
# Take the average of each variable for each activity for each subject
tidy_data <- aggregate(. ~ Subject + ActivityName, extracted_data, mean)
# Output data ----
write.table(tidy_data, "tidy_data.txt", row.names = FALSE)
